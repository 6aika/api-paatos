# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-05 14:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(max_length=255, verbose_name='IRI for this action')),
                ('title', models.CharField(max_length=255, verbose_name='Descriptive compact title for this case')),
                ('ordering', models.IntegerField(verbose_name='Ordering of this action within a meeting')),
                ('article_number', models.CharField(max_length=255, verbose_name='The article number given to this action after decision')),
                ('proposal_identifier', models.CharField(max_length=255, verbose_name='Identifier for this action used inside the meeting minutes. The format will vary between cities.')),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name="Area's name")),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(max_length=255, verbose_name='IRI for this attachment')),
                ('file', models.CharField(max_length=255, verbose_name='FIXME: i should refer to a file')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50, verbose_name='Role of the person in the event (chairman, secretary...')),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(max_length=255, verbose_name='IRI for this case')),
                ('title', models.CharField(max_length=255, verbose_name='A high level matter to be decided')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='A descriptive compact title for the case')),
                ('summary', models.CharField(blank=True, max_length=255, verbose_name='Summary of this case. Typically a few sentences.')),
                ('category', models.CharField(blank=True, max_length=255, verbose_name='Category this case belongs to ("tehtäväluokka")')),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('public', models.BooleanField(default=True)),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='decisions.Area', verbose_name='Geographic area this case is related to')),
                ('attachments', models.ManyToManyField(to='decisions.Attachment')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iri', models.CharField(max_length=255, verbose_name='IRI for this content')),
                ('ordering', models.IntegerField(verbose_name='Ordering of this content within the larger context (like action)')),
                ('title', models.CharField(max_length=255, verbose_name='Title of this content')),
                ('type', models.CharField(max_length=255, verbose_name='Type of this content (options include: decision, proposal, proceedings...)')),
                ('hypertext', models.CharField(max_length=255, verbose_name='Content formatted with pseudo-HTML. Only a very restricted set of tags is allowed. These are: first and second level headings (P+H1+H2) and table (more may be added, but start from a minimal set)')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Action', verbose_name='Action that this content describes')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name="The event's name")),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abstract', models.CharField(max_length=255, verbose_name='A one-line description of an organization')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name="A person's preferred full name")),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name="Post's label")),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='VoteCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VoteEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legislative_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Event', verbose_name='The meeting (event) where this vote took place')),
                ('vote_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.VoteCount')),
            ],
        ),
        migrations.AddField(
            model_name='membership',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization', verbose_name='The organization in which the person or organization is a member'),
        ),
        migrations.AddField(
            model_name='membership',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Person', verbose_name='Person who has membership in organization'),
        ),
        migrations.AddField(
            model_name='membership',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Post', verbose_name='The post held by the member through this membership'),
        ),
        migrations.AddField(
            model_name='event',
            name='attendees',
            field=models.ManyToManyField(through='decisions.Attendance', to='decisions.Person', verbose_name='People attending this event'),
        ),
        migrations.AddField(
            model_name='event',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization', verbose_name='The organization organizing the event'),
        ),
        migrations.AddField(
            model_name='case',
            name='originator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='decisions.Person'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='attendee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Person'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Event'),
        ),
        migrations.AddField(
            model_name='action',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Case', verbose_name='Case this action affects'),
        ),
        migrations.AddField(
            model_name='action',
            name='delegation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='decisions.Post', verbose_name='If this decision was delegated, this field will be filled and refers to the post that made the decision'),
        ),
        migrations.AddField(
            model_name='action',
            name='event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='decisions.Event', verbose_name='Event (if any) where this action took place'),
        ),
        migrations.AddField(
            model_name='action',
            name='responsible_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decisions.Organization', verbose_name='The city organization responsible for this decision. If decision is delegated, this is the organization that delegated the authority.'),
        ),
    ]
