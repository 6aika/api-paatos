swagger: '2.0'

info:
  title: Open Decisions API
  description: API for distributing data about decisions and people behind those decisions
  termsOfService: (depends on authority providing the data)
  version: 0.0.5

# during dev, should point to your local machine
host: paatos-test.6aika.fi
# basePath prefixes all resource paths 
basePath: /v1

schemes:
  - https
  
produces:
  - application/json

parameters:
  page_param:
    name: page
    in: query
    description: request particular page in paginated results
    required: false
    type: integer
  pagesize_param:
    name: page_size
    in: query
    description: request that server delivers page_size results in response
    required: false
    type: integer

definitions:
  Meta:
    type: object
    title: Pagination control
    description: Meta structure for controlling pagination
    properties:
      previous:
        type: string
        description: Uri of the previous page relative to the current page settings.
      total_count:
        type: integer
        description: Total items count for the all collection
      offset:
        type: integer
        description: Specify the offset to start displaying element on a page.
      limit:
        type: integer
        description: Specify the number of element to display per page.
      next:
        type: string
        description: Uri of the next page relative to the current page settings.

  case:
    type: object
    title: 'High level matter to be decided ("Asia")'
    description: 'A matter being decided withing the organization. These are often considered across multiple meetings and possibly across multiple decision makers. Cases can also be related to other cases, forming more complex structures. All that said, it is not unusual for a case to involve only a single action. Previous version used *issue* as similar concept, without interlinking.'
    properties:
      url:
        description: The case's url
        type: string
      id:
        description: The case's unique identifier
        type: number
        format: int64
      data_source:
        description: The case's data source
        type: string
      actions:
        description: Array of urls to actions
        type: array
        items:
          type: string
      geometries:
        description: Array of geometries
        type: array
        items:
          $ref: '#/definitions/geometry'
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The event's origin id
        type: string
      title:
        description: Title of the case
        type: string
      register_id:
        description: Register id for this case
        type: string
      function:
        description: Function url for this case
        type: string
      attachments:
        description: Array of attachments
        type: array
        items:
          $ref: '#/definitions/attachment'
        
  action:
    type: object
    title: An action taken by a decision maker.
    description: 'An action taken by a decision maker. Except for formalities (like quorum), these always involve a case and a decision by an organization or post, even if only postponing the decision. For decision making bodies, actions are always taken in context of a meeting. For officials, some cities also publish their decisions as being done in a meeting, although there is only one person present.'
    properties:
      url:
        description: The action's url
        type: string
      id:
        description: The action's unique identifier
        type: number
        format: int64
      data_source:
        description: The action's data source
        type: string
      contents:
        description: Array of contents
        type: array
        items:
          $ref: '#/definitions/content'
      attachments:
        description: Array of attachments
        type: array
        items:
          $ref: '#/definitions/attachment'
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The event's origin id
        type: string
      title:
        description: Title of the action
        type: string
      ordering:
        description: Ordering of this action within a meeting (or possibly arbitrary ordering)
        type: integer
      article_number:
        description: The article number given to this action after decision, will be null before decision
        type: string
      resolution:
        description: Action's resolution
        type: string
      case:
        description: Case url this action is related to
        type: string
      post:
        description: Post url
        type: string
      event:
        description: Event url this action is related to
        type: string

  # this is derived from Popolo, converted to YAML and JSON Schema draft-04
  # Event is to be used for meetings and also votes within actions
  Event:
    title: Event
    description: An occurrence that people may attend
    type: object
    properties:
      url:
        description: The event's url
        type: string
      id:
        description: The event's unique identifier
        type: number
        format: int64
      data_source:
        description: The event's data source
        type: string
      actions:
        description: The evvent's actions
        type: array
        items:
          type: string
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The event's origin id
        type: string
      name:
        description: The event's name
        type: string
      start_date:
        description: The time at which the event starts
        type: string
        format: date
      end_date:
        description: The time at which the event ends
        type: string
        format: date
      organization:
        description: The url of the organization organizing the event
        type: string

  # this is derived from Popolo, converted to YAML and JSON Schema draft-04
  Vote_event:
    title: Vote event
    description: An event at which people's votes are recorded
    type: object
    properties:
      id:
        description: The vote event's unique identifier
        type: string
      organization_id:
        description: The ID of the organization whose members are voting
        type: string
      organization:
        description: The organization whose members are voting
        $ref: '#/definitions/Organization'
      legislative_session:
        description: IRI reference to the Event (meeting) where this vote took place
        $ref: '#/definitions/Event'
      identifier:
        description: An issued identifier
        type: string
      action:
        description: The action to which this vote_event applies.
        $ref: '#/definitions/action'
      start_date:
        description: The time at which the event begins
        type: string
        format: date-time
      end_date:
        description: The time at which the event ends
        type: string
        format: date-time
      result:
        description: The result of the vote event. 
        type: string
#      group_results:
#        description: '(6Aika note: this might not useful. Remove?) The result of the vote event within groups of voters.'
#        type: array
#        items:
#          $ref: '#/definitions/group_result'
      counts:
        description: The number of votes for options
        type: array
        items:
          $ref: '#/definitions/Vote_count'
# (6Aika note: leaving out for first edition)
#      votes:
#        description: Voters' votes
#        type: array
#        items:
#          $ref: '#/definitions/Vote'
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      updated_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
# (6Aika note: are these necessary?)
#     sources:
#        description: URLs to documents from which the resource is derived
#        type: array
#        items:
#          $ref: '#/definitions/link'

  Vote_count:
    title: Count
    description: The number of votes for an option in a vote event
    type: object
    required:
    - option
    - value
    properties:
      option:
        description: An option in a vote event
        type: string
      value:
        description: The number of votes for an option
        type: integer
      group_id:
        description: The ID of a group of voters
        type: string
      group:
        description: A group of voters
        type: object

  # this is derived from Popolo, converted to YAML and JSON Schema draft-04
  Organization:
    title: Organization
    description: A group with a common purpose or reason for existence that goes beyond the set of people belonging to it
    type: object
    properties:
      url:
        description: The organization's url
        type: string
      id:
        description: The organization's unique identifier
        type: number
        format: int64
      data_source:
        description: The organization's data source
        type: string
      events:
        description: The organization's events
        type: array
        items:
          type: string
      posts:
        description: The organization's posts
        type: array
        items:
          type: string
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The organization's origin id
        type: string
      classification:
        description: The organization's classification
        type: string
      name:
        description: The organization's name
        type: string
      founding_date:
        description: The time at which the organization was founded
        type: string
        format: date
      dissolution_date:
        description: The time at which the organization was dissolved
        type: string
        format: date
      parent:
        description: The url of the organization's parent organization
        type: string

  # this is derived from Popolo, converted to YAML and JSON Schema draft-04
  Membership:
    title: Membership
    description: A relationship between a member and an organization
    type: object
    properties:
      id:
        description: The membership's unique identifier
        type: string
      label:
        description: A label describing the membership
        type: string
      role:
        description: The role that the member fulfills in the organization
        type: string
      member:
        description: The person or organization that is a member of the organization
        type: object
      person_id:
        description: The ID of the person who is a member of the organization
        type: string
      person:
        description: The person who is a member of the organization
        $ref: '#/definitions/Person'
# (6Aika note: not used)
#      organization_id:
#        description: The ID of the organization in which the person or organization is a member
#        type: string
      organization:
        description: The organization in which the person or organization is a member
        $ref: '#/definitions/Organization'
      post_id:
        description: The ID of the post held by the member in the organization through this membership
        type: string
      post:
        description: The post held by the member in the organization through this membership
        $ref: '#/definitions/Post'
# (6Aika note: not used)
#      on_behalf_of_id:
#        description: The ID of the organization on whose behalf the person is a member of the organization
#        type: string
      on_behalf_of:
        description: The organization on whose behalf the person is a member of the organization
        $ref: '#/definitions/Organization'
# (6Aika note: not needed for cities?)        
#      area_id:
#        description: The ID of the geographic area to which this membership is related
#        type: string
#      area:
#        description: The geographic area to which this membership is related
#        $ref: '#/definitions/Area'
      start_date:
        description: The date on which the relationship began
        type: string
        format: date
      end_date:
        description: The date on which the relationship ended
        type: string
        format: date
# (6Aika note: left out for this version)
#      contact_details:
#        description: Means of contacting the member of the organization
#        type: array
#        items:
#          $ref: '#/definitions/contact_detail'
# (6aika note: left out for this version)
#      links:
#        description: URLs to documents about the membership
#        type: array
#        items:
#          $ref: '#/definitions/link'
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      updated_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
# (&aika note: left out for this version)
#      sources:
#        description: URLs to documents from which the resource is derived
#        type: array
#        items:
#          $ref: '#/definitions/link'

  # this is derived from Popolo, converted to YAML and JSON Schema draft-04
  Person:
    title: Person
    description: A real person, alive or dead
    type: object
    properties:
      id:
        description: The person's unique identifier
        type: string
      name:
        description: A person's preferred full name
        type: string
# (6Aika note: not used)
#      other_names:
#        description: Alternate or former names
#        type: array
#        items:
#          $ref: '#/definitions/other_name'
# (6Aika note: not used)
#      identifiers:
#        description: Issued identifiers
#        type: array
#        items:
#          $ref: '#/definitions/identifier'
      family_name:
        description: One or more family names
        type: string
      given_name:
        description: One or more primary given names
        type: string
      additional_name:
        description: One or more secondary given names
        type: string
      honorific_prefix:
        description: One or more honorifics preceding a person's name
        type: string
      honorific_suffix:
        description: One or more honorifics following a person's name
        type: string
      patronymic_name:
        description: One or more patronymic names
        type: string
      sort_name:
        description: A name to use in a lexicographically ordered list
        type: string
      email:
        description: A preferred email address
        type: string
        format: email
      gender:
        description: A gender
        type: string
      birth_date:
        description: A date of birth
        type: string
        format: date
      death_date:
        description: A date of death
        type: string
        format: date
      image:
        description: A URL of a head shot
        type: string
        format: uri
      summary:
        description: A one-line account of a person's life
        type: string
      biography:
        description: An extended account of a person's life
        type: string
      national_identity:
        description: A national identity
        type: string
# (6Aika note: not used)
#      contact_details:
#        description: Means of contacting the person
#        type: array
#        items:
#          $ref: '#/definitions/contact_detail'
# (6Aika note: not used)
#      links:
#        description: URLs to documents about the person
#        type: array
#        items:
#          $ref: '#/definitions/link'
      memberships:
        description: The person's memberships
        type: array
        items:
          $ref: '#/definitions/Membership'
# (6Aika note: motion structure is not used)
#      motions:
#        description: The person's motions
#        type: array
#        items:
#          $ref: '#/definitions/Motion'
# (6Aika note: coming later)
#      speeches:
#        description: The person's speeches
#        type: array
#        items:
#          $ref: '#/definitions/speech'
# (6Aika note: coming later)
#      votes:
#        description: Votes cast by the person
#        type: array
#        items:
#          $ref: '#/definitions/Vote'
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      updated_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
# (6Aika note: not used)
#      sources:
#        description: URLs to documents from which the resource is derived
#        type: array
#        items:
#          $ref: '#/definitions/link'


  Post:
    title: Post
    description: A position that exists independent of the person holding it
    type: object
    properties:
      id:
        description: The post's unique identifier
        type: string
      label:
        description: A label describing the post
        type: string
      other_label:
        description: An alternate label
        type: array
        items:
          type: string
      role:
        description: The function that the holder of the post fulfills
        type: string
# (6Aika note: id is not used, only reference)
#      organization_id:
#        description: The ID of the organization in which the post is held
#        type: string
      organization:
        description: The organization in which the post is held
        $ref: '#/definitions/Organization'
      area_id:
        description: The ID of the geographic area to which this post is related
        type: string
# (6Aika note: needs checking if the are posts with areas)
#      area:
#        description: The geographic area to which this post is related
#        $ref: '#/definitions/Area'
      start_date:
        description: The date on which the post was created
        type: string
        format: date
      end_date:
        description: The date on which the post was eliminated
        type: string
        format: date
# (6Aika note: not used for now)
#      contact_details:
#        description: Means of contacting the holder of the post
#        type: array
#        items:
#          $ref: '#/definitions/contact_detail'
# (6Aika note: not used for now)
#      links:
#        description: URLs to documents about the post
#        type: array
#        items:
#          $ref: '#/definitions/link'
      memberships:
        description: The memberships through which people hold the post in the organization
        type: array
        items:
          $ref: '#/definitions/Membership'
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      updated_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
# (6Aika note: not used for now)
#      sources:
#        description: URLs to documents from which the resource is derived
#        type: array
#        items:
#          $ref: '#/definitions/link'

  # this is derived from Popolo, converted to YAML and JSON Schema draft-04
  Area:
    title: Area
    description: A geographic area whose geometry may change over time
    type: object
    properties:
      id:
        description: The area's unique identifier
        type: string
      name:
        description: A primary name
        type: string
      identifier:
        description: An issued identifier
        type: string
      classification:
        description: An area category, e.g. city
        type: string
      parent_id:
        description: The ID of the area that contains this area
        type: string
      parent:
        description: The area that contains this area
        $ref: '#/definitions/Area'
      geometry:
        description: A geometry
        type: object
# (6Aika note: leaving out areas related to memberships for now)
#      memberships:
#        description: The memberships to which this area is related
#        type: array
#        items:
#          $ref: '#/definitions/Membership'
# (6Aika note: same as with memberships, leaving out for now)
#      organizations:
#        description: The organizations to which this area is related
#        type: array
#        items:
#          $ref: '#/definitions/Organization'
# (6Aika note: same as with memberships, although area related posts certainly exist)
#      posts:
#        description: The posts to which this area is related
#        type: array
#        items:
#          $ref: '#/definitions/Post'
      children:
        description: The sub-areas of the area
        type: array
        items:
          $ref: '#/definitions/Area'
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      updated_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
# (6Aika note: not used for now)
#      sources:
#        description: URLs to documents from which the resource is derived
#        type: array
#        items:
#          $ref: '#/definitions/link'

  content:
    type: object
    title: Text contents for actions and cases
    description: Content objects contain the text describing actions takens on cases and the cases themselves. They consist of metadata and the actual content as HTML-formatted text.
    properties:
      data_source:
        description: The content's data source
        type: string
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The content's origin id
        type: string
      ordering:
        description: Ordering of this content within the larger context
        type: integer
      title:
        description: The content's title
        type: string
      type:
        description: The content's type
        type: string
      hypertext:
        description: 'Content formatted with pseudo-HTML. Only a very restricted set of tags is allowed. These are: first and second level headings (P+H1+H2) and table (more may be added, but start from a minimal set)'
        type: string
        
  attachment:
    type: object
    title: File attachment related to an action or a case
    description: Both actions and cases can have related attachments. Usually, the attachments are accumulated in the case and also referenced in the action that attached them to the case.
    properties:
      url:
        description: URL pointing the attached file
        type: string
        format: url
      data_source:
        description: The attachment's data source
        type: string
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The attachment's origin id
        type: string
      name:
        description: The attachment's name
        type: string
      public: 
        description: Is the attachment public
        type: boolean
      confidentiality_reason:
        description: The attachment's confidentiality reason
        type: string
  
  function:
    title: Function
    description: A function
    type: object
    properties:
      url:
        description: The function's url
        type: string
      id:
        description: The function's unique identifier
        type: number
        format: int64
      data_source:
        description: The function's data source
        type: string
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The function's origin id
        type: string
      name:
        description: The function's name
        type: string
      function_id:
        description: The actual function id
        type: string
      parent:
        description: URL to parent function
        type: string
        
  geometry:
    type: object
    title: Geometry object
    description: Single geometry object
    properties:
      data_source:
        description: The geometry's data source
        type: string
      created_at:
        description: The time at which the resource was created
        type: string
        format: date-time
      modified_at:
        description: The time at which the resource was last modified
        type: string
        format: date-time
      origin_id:
        description: The geometry's origin id
        type: string
      name:
        description: The geometry's name
        type: string
      type:
        description: The geometry's type
        type: string
      geometry:
        type: object
        properties:
          type:
            description: Type
            type: string
          coordinates:
            description: Array of GEO JSON coordinates
            type: array
            items:
              type: object
              
paths:
  /case/:
    x-swagger-router-controller: cases
    get:
      summary: Retrieve a list of cases
      operationId: cases_list
      responses:
        200:
          description: List of cases
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Total items count for the all collection
              next:
                type: string
                description: Uri of the next page relative to the current page settings.            
              previous:
                type: string
                description: Uri of the previous page relative to the current page settings.
              results:
                type: array
                items:
                  $ref: '#/definitions/case'
      tags:
      - cases
      parameters:
      - type: integer
        in: query
        required: false
        name: limit
        description: Specify the number of element to display per page.
      - type: integer
        in: query
        required: false
        name: offset
        description: Specify the offset to start displaying element on a page.

  /case/{id}/:
    x-swagger-router-controller: cases
    get:
      summary: Retrieve a single case by ID
      operationId: cases_retrieve
      responses:
        200:
          description: A single case record
          schema:
            $ref: '#/definitions/case'
      tags:
      - cases
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource

  /action/:
    x-swagger-router-controller: actions
    get:
      summary: Retrieve a list of actions
      operationId: actions_list
      responses:
        200:
          description: List of actions
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Total items count for the all collection
              next:
                type: string
                description: Uri of the next page relative to the current page settings.            
              previous:
                type: string
                description: Uri of the previous page relative to the current page settings.
              results:
                type: array
                items:
                  $ref: '#/definitions/action'
      tags:
      - actions
      parameters:
      - type: integer
        in: query
        required: false
        name: limit
        description: Specify the number of element to display per page.
      - type: integer
        in: query
        required: false
        name: offset
        description: Specify the offset to start displaying element on a page.
        
  /action/{id}/:
    x-swagger-router-controller: actions
    get:
      summary: Retrieve a single action by ID
      operationId: actions_retrieve
      responses:
        200:
          description: A single action record
          schema:
            $ref: '#/definitions/action'
      tags:
      - actions
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource

  /person/:
    x-swagger-router-controller: persons
    get:
      summary: Retrieve a list of persons
      operationId: persons_list
      responses:
        200:
          description: List of persons
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Meta'
              objects:
                type: array
                items:
                  $ref: '#/definitions/Person'
      tags:
      - persons
      - decision_makers
      parameters:
      - type: integer
        in: query
        required: false
        name: limit
        description: Specify the number of element to display per page.

  /person/{id}/:
    x-swagger-router-controller: persons
    get:
      summary: Retrieve a single person record
      operationId: persons_retrieve
      responses:
        200:
          description: A single person record
          schema:
            $ref: '#/definitions/Person'
      tags:
      - persons
      - decision_makers
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource

  /organization/:
    x-swagger-router-controller: organizations
    get:
      summary: Retrieve a list of organizations
      operationId: organizations_list
      responses:
        200:
          description: List of organizations
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Total items count for the all collection
              next:
                type: string
                description: Uri of the next page relative to the current page settings.            
              previous:
                type: string
                description: Uri of the previous page relative to the current page settings.
              results:
                type: array
                items:
                  $ref: '#/definitions/Organization'
      tags:
      - organizations
      - decision_makers
      parameters:
      - type: integer
        in: query
        required: false
        name: limit
        description: Specify the number of element to display per page.
      - type: integer
        in: query
        required: false
        name: offset
        description: Specify the offset to start displaying element on a page.
  /organization/{id}/:
    x-swagger-router-controller: persons
    get:
      summary: Retrieve a single person record
      operationId: organizations_retrieve
      responses:
        200:
          description: A single person record
          schema:
            $ref: '#/definitions/Organization'
      tags:
      - organizations
      - decision_makers
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource

  /membership/:
    x-swagger-router-controller: memberships
    get:
      summary: Retrieve a list of memberships
      operationId: memberships_list
      responses:
        200:
          description: List of memberships
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Meta'
              objects:
                type: array
                items:
                 $ref: '#/definitions/Membership'
      tags:
      - memberships
      - decision_makers
      parameters:
      - type: integer
        in: query
        required: false
        name: limit
        description: Specify the number of element to display per page.

  /membership/{id}/:
    x-swagger-router-controller: memberships
    get:
      summary: Retrieve a single membership record
      operationId: memberships_retrieve
      responses:
        200:
          description: A single membership record
          schema:
            $ref: '#/definitions/Membership'
      tags:
      - memberships
      - decision_makers
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource

  /post/:
    x-swagger-router-controller: posts
    get:
      summary: Retrieve a list of posts
      operationId: posts_list
      responses:
        200:
          description: List of posts
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Total items count for the all collection
              next:
                type: string
                description: Uri of the next page relative to the current page settings.            
              previous:
                type: string
                description: Uri of the previous page relative to the current page settings.
              results:
                type: array
                items:
                  $ref: '#/definitions/Post'
      tags:
      - posts
      - decision_makers
      parameters:
      - $ref: '#/parameters/pagesize_param'
      - $ref: '#/parameters/page_param'

  /post/{id}/:
    x-swagger-router-controller: posts
    get:
      summary: Retrieve a single post record
      operationId: posts_retrieve
      responses:
        200:
          description: A single post record
          schema:
            $ref: '#/definitions/Post'
      tags:
      - posts
      - decision_makers
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource

  /event/:
    x-swagger-router-controller: events
    get:
      summary: Retrieve a list of events
      operationId: events_list
      responses:
        200:
          description: List of events
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Total items count for the all collection
              next:
                type: string
                description: Uri of the next page relative to the current page settings.            
              previous:
                type: string
                description: Uri of the previous page relative to the current page settings.
              results:
                type: array
                items:
                  $ref: '#/definitions/Event'
      tags:
      - events
      parameters:
      - type: integer
        in: query
        required: false
        name: limit
        description: Specify the number of element to display per page.
      - type: integer
        in: query
        required: false
        name: offset
        description: Specify the offset to start displaying element on a page.
      - type: integer
        in: query
        required: false
        name: organization
        description: Filter by organization id
        
  /event/{id}/:
    x-swagger-router-controller: events
    get:
      summary: Retrieve a single event by ID
      operationId: events_retrieve
      responses:
        200:
          description: A single event record
          schema:
            $ref: '#/definitions/Event'
      tags:
      - events
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource

  /function/:
    x-swagger-router-controller: functions
    get:
      summary: Retrieve a list of functions
      operationId: functions_list
      responses:
        200:
          description: List of functions
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Total items count for the all collection
              next:
                type: string
                description: Uri of the next page relative to the current page settings.            
              previous:
                type: string
                description: Uri of the previous page relative to the current page settings.
              results:
                type: array
                items:
                  $ref: '#/definitions/function'
      tags:
      - functions
      parameters:
      - type: integer
        in: query
        required: false
        name: limit
        description: Specify the number of element to display per page.
      - type: integer
        in: query
        required: false
        name: offset
        description: Specify the offset to start displaying element on a page.
        
  /function/{id}/:
    x-swagger-router-controller: functions
    get:
      summary: Retrieve a single function by ID
      operationId: functions_retrieve
      responses:
        200:
          description: A single function record
          schema:
            $ref: '#/definitions/function'
      tags:
      - functions
      parameters:
      - name: id
        type: integer
        in: path
        required: true
        description: Primary key of resource
